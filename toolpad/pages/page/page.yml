# yaml-language-server: $schema=https://raw.githubusercontent.com/mui/mui-toolpad/v0.1.54/docs/schemas/v1/definitions.json#properties/Page

apiVersion: v1
kind: page
spec:
  title: Default page
  alias:
    - TWlpkO2
  queries:
    - name: getTaches
      mode: mutation
      query:
        kind: rest
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: GET
        searchParams: []
        url:
          $$jsExpression: 'parameters.all ? parameters.host+"taches?all=1" :
            parameters.host+"taches"'
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: all
          value:
            $$jsExpression: switchTaches.checked
    - name: getTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`tache/${parameters.id}`
        searchParams: []
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: GET
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textFieldTache.value
    - name: addTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+"modifyTask/tache"
        searchParams: []
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: POST
        body:
          kind: raw
          content:
            $$jsExpression: "`{\r

              \  \"titre\": \"${parameters.titre}\",\r

              \  \"description\": \"${parameters.description}\",\r

              \  \"date_debut\": \"${parameters.date_debut}\",\r

              \  \"date_echeance\": \"${parameters.date_fin}\",\r

              \  \"complete\": \"${parameters.complete}\"\r

              }`"
          contentType: application/json
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: titre
          value:
            $$jsExpression: textFieldAddTache.value
        - name: description
          value:
            $$jsExpression: textFieldAddTache1.value
        - name: date_debut
          value:
            $$jsExpression: datePickerAddTache.value
        - name: date_fin
          value:
            $$jsExpression: datePickerAddTache1.value
        - name: complete
          value:
            $$jsExpression: textFieldAddTache2.value
    - name: removeTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifyTask/tacheR/${parameters.id}`
        searchParams: []
        headers: []
        method: DELETE
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textFieldRemoveTache.value
    - name: updateTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifyTask/tacheU/${parameters.id}`
        searchParams: []
        headers: []
        method: PUT
        body:
          kind: raw
          content:
            $$jsExpression: "`{\r

              \  \"titre\": ${parameters.titre},\r

              \  \"description\": ${parameters.description},\r

              \  \"date_debut\": ${parameters.date_debut},\r

              \  \"date_echeance\": ${parameters.date_fin},\r

              \  \"complete\": ${parameters.complete}\r

              }`"
          contentType: application/json
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textFieldUpdateTache3.value
        - name: titre
          value:
            $$jsExpression: textFieldUpdateTache.value
        - name: description
          value:
            $$jsExpression: textFieldUpdateTache1.value
        - name: date_debut
          value:
            $$jsExpression: datePickerUpdateTache.value
        - name: date_fin
          value:
            $$jsExpression: datePickerUpdateTache1.value
        - name: complete
          value:
            $$jsExpression: textFieldUpdateTache2.value
    - name: updateTacheComplete
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifyTask/tacheC/${parameters.id}`
        searchParams: []
        headers: []
        method: GET
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textFieldCompleteTache.value
    - name: addSousTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifySubTask/sousTache`
        searchParams: []
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: POST
        body:
          kind: raw
          content:
            $$jsExpression: "`{\r

              \  \"tache_id\": \"${parameters.tache_id}\",\r

              \  \"titre\": \"${parameters.titre}\",\r

              \  \"complete\": \"${parameters.complete}\"\r

              }`"
          contentType: application/json
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: titre
          value:
            $$jsExpression: textFieldAddSousTache.value
        - name: complete
          value:
            $$jsExpression: textField.value
        - name: tache_id
          value:
            $$jsExpression: textFieldAddSousTache1.value
    - name: removeSousTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifySubTask/sousTacheR/${parameters.id}`
        searchParams: []
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: DELETE
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textFieldRemoveSousTache.value
    - name: updateSousTache
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifySubTask/sousTacheU/${parameters.id}`
        searchParams: []
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: PUT
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textFieldUpdateSousTache.value
        - name: titre
          value:
            $$jsExpression: textField2.value
        - name: complete
          value:
            $$jsExpression: textField3.value
    - name: updateSousTacheComplete
      mode: mutation
      query:
        kind: rest
        url:
          $$jsExpression: parameters.host+`modifySubTask/sousTacheC/${parameters.id}`
        searchParams: []
        headers:
          [{ name: Authorization, value: { $$jsExpression: parameters.api } }]
        method: PATCH
      parameters:
        - name: host
          value:
            $$env: API_HOST
        - name: api
          value:
            $$env: API_KEY
        - name: id
          value:
            $$jsExpression: textField1.value
  content:
    - component: Text
      name: textTaches
      layout:
        horizontalAlign: center
      props:
        variant: h3
        value: Afficher toutes les tâches
    - component: DataGrid
      name: dataGridTaches
      props:
        rows:
          $$jsExpression: getTaches.data.tâches
        columns:
          - field: id
            type: number
          - field: titre
            type: string
    - component: PageRow
      name: pageRowTaches
      props:
        justifyContent: start
      children:
        - component: Checkbox
          name: switchTaches
          layout:
            columnSize: 0.7966215868491271
            horizontalAlign: end
          props:
            mode: switch
            label: Afficher toutes les tâches
        - component: Button
          name: buttonTaches
          props:
            fullWidth: true
            content: Afficher tâches
            onClick:
              $$jsExpressionAction: getTaches.call()
          layout:
            columnSize: 1.2033784131508727
            horizontalAlign: center
    - component: Spacer
      name: spacerTaches
    - component: Text
      name: textTache
      layout:
        horizontalAlign: center
      props:
        value: Afficher les détails d'une tâche
        variant: h3
    - component: DataGrid
      name: dataGridTache
      props:
        rows:
          $$jsExpression: getTache.data.tâche
        rowIdField: null
        columns:
          - field: id
            type: number
          - field: utilisateur_id
            type: number
          - field: titre
            type: string
          - field: description
            type: string
          - field: date_debut
            type: dateTime
          - field: date_echeance
            type: dateTime
          - field: complete
            type: number
      layout:
        height: 360
    - component: PageRow
      name: pageRowTache
      props:
        justifyContent: start
      children:
        - component: Container
          name: containerTache
          children:
            - component: PageRow
              name: pageRowTache1
              props:
                justifyContent: start
              children:
                - component: Text
                  name: textTache1
                  layout:
                    horizontalAlign: end
                  props:
                    value: "Id de la tâche:"
                - component: TextField
                  name: textFieldTache
                  layout:
                    columnSize: 1
                  props:
                    fullWidth: true
        - component: Button
          name: button1
          layout:
            horizontalAlign: center
          props:
            content: Afficher détail Tâche
            fullWidth: true
            onClick:
              $$jsExpressionAction: getTache.call()
    - component: Spacer
      name: spacerTache
    - component: Text
      name: textAddTache
      props:
        value: Ajouter une tâche
        variant: h3
      layout:
        horizontalAlign: center
    - component: PageRow
      name: pageRowAddTache
      children:
        - component: Container
          name: containerAddTache
          children:
            - component: PageRow
              name: pageRowAddTache1
              props:
                justifyContent: start
              children:
                - component: Text
                  name: textAddTache1
                  layout:
                    horizontalAlign: end
                  props:
                    value: "Titre: "
                - component: TextField
                  name: textFieldAddTache
                  props:
                    fullWidth: true
        - component: Container
          name: containerAddTache1
          children:
            - component: PageRow
              name: pageRowAddTache2
              props:
                justifyContent: start
              children:
                - component: Text
                  name: textAddTache2
                  layout:
                    horizontalAlign: end
                  props:
                    value: "Description: "
                - component: TextField
                  name: textFieldAddTache1
                  props:
                    fullWidth: true
      props:
        justifyContent: start
    - component: Container
      name: containerAddTache2
      children:
        - component: PageRow
          name: pageRowAddTache3
          children:
            - component: Text
              name: textAddTache3
              props:
                value: "Date début: "
              layout:
                columnSize: 0.7452470974680292
                horizontalAlign: end
            - component: DatePicker
              name: datePickerAddTache
              layout:
                columnSize: 0.7447180895734602
              props:
                fullWidth: true
            - component: Container
              name: containerAddTache3
              layout:
                columnSize: 1.5100348129585106
              children:
                - component: PageRow
                  name: pageRowAddTache4
                  props:
                    justifyContent: start
                  children:
                    - component: Text
                      name: textAddTache4
                      layout:
                        horizontalAlign: end
                      props:
                        value: "Date fin: "
                    - component: DatePicker
                      name: datePickerAddTache1
                      props:
                        fullWidth: true
          props:
            justifyContent: start
    - component: PageRow
      name: pageRowAddTache5
      children:
        - component: Text
          name: textAddTache5
          props:
            value: "Complete: "
          layout:
            columnSize: 0.7452505710799148
            horizontalAlign: end
        - component: TextField
          name: textFieldAddTache2
          layout:
            columnSize: 0.7447225280795721
          props:
            fullWidth: true
        - component: Spacer
          name: spacerAddTache1
          layout:
            columnSize: 1.5100269008405132
      props:
        justifyContent: start
    - component: Button
      name: buttonAddTache
      props:
        fullWidth: true
        content: Ajouter Tâche
        onClick:
          $$jsExpressionAction: addTache.call()
    - component: Spacer
      name: spacerAddTache
    - component: Text
      name: textRemoveTache
      layout:
        horizontalAlign: center
      props:
        variant: h3
        value: Supprimer une tâche
    - component: PageRow
      name: pageRowRemoveTache
      props:
        justifyContent: start
      children:
        - component: Text
          name: textRemoveTache1
          layout:
            columnSize: 0.745254618930525
            horizontalAlign: end
          props:
            value: "Id de la tâche: "
        - component: TextField
          name: textFieldRemoveTache
          layout:
            columnSize: 0.7447156053237783
          props:
            fullWidth: true
        - component: Button
          name: buttonRemoveTache
          layout:
            columnSize: 1.5100297757456964
          props:
            fullWidth: true
            content: Supprimer la Tâche
            onClick:
              $$jsExpressionAction: removeTache.call()
    - component: Spacer
      name: spacerRemoveTache
    - component: Text
      name: textUpdateTache
      layout:
        horizontalAlign: center
      props:
        variant: h3
        value: Modifier un tâche
    - component: PageRow
      name: pageRowUpdateTache
      props:
        justifyContent: start
      children:
        - component: Container
          name: containerUpdateTache
          children:
            - component: PageRow
              name: pageRowUpdateTache1
              props:
                justifyContent: start
              children:
                - component: Text
                  name: textUpdateTache1
                  layout:
                    horizontalAlign: end
                  props:
                    value: "Titre: "
                - component: TextField
                  name: textFieldUpdateTache
                  props:
                    fullWidth: true
        - component: Container
          name: containerUpdateTache1
          children:
            - component: PageRow
              name: pageRowUpdateTache2
              props:
                justifyContent: start
              children:
                - component: Text
                  name: textUpdateTache2
                  layout:
                    horizontalAlign: end
                  props:
                    value: "Description: "
                - component: TextField
                  name: textFieldUpdateTache1
                  props:
                    fullWidth: true
    - component: Container
      name: containerUpdateTache2
      children:
        - component: PageRow
          name: pageRowUpdateTache3
          children:
            - component: Text
              name: textUpdateTache3
              props:
                value: "Date début: "
              layout:
                columnSize: 0.7452470974680292
                horizontalAlign: end
            - component: DatePicker
              name: datePickerUpdateTache
              layout:
                columnSize: 0.7447180895734602
              props:
                fullWidth: true
            - component: Container
              name: containerUpdateTache3
              layout:
                columnSize: 1.5100348129585106
              children:
                - component: PageRow
                  name: pageRowUpdateTache4
                  props:
                    justifyContent: start
                  children:
                    - component: Text
                      name: textUpdateTache4
                      layout:
                        horizontalAlign: end
                      props:
                        value: "Date fin: "
                    - component: DatePicker
                      name: datePickerUpdateTache1
                      props:
                        fullWidth: true
          props:
            justifyContent: start
    - component: PageRow
      name: pageRowUpdateTache5
      children:
        - component: Text
          name: textUpdateTache5
          props:
            value: "Complete: "
          layout:
            columnSize: 0.7452505710799148
            horizontalAlign: end
        - component: TextField
          name: textFieldUpdateTache2
          layout:
            columnSize: 0.7447225280795721
          props:
            fullWidth: true
        - component: Spacer
          name: spacerUpdateTache1
          layout:
            columnSize: 1.5100269008405132
      props:
        justifyContent: start
    - component: PageRow
      name: pageRowUpdateTache6
      props:
        justifyContent: start
      children:
        - component: Text
          name: textUpdateTache6
          layout:
            columnSize: 0.745254618930525
            horizontalAlign: end
          props:
            value: "Id de la tâche: "
        - component: TextField
          name: textFieldUpdateTache3
          layout:
            columnSize: 0.7447156053237783
          props:
            fullWidth: true
        - component: Button
          name: buttonUpdateTache
          layout:
            columnSize: 1.5100297757456964
          props:
            fullWidth: true
            content: Modifier Tâche
            onClick:
              $$jsExpressionAction: updateTache.call()
    - component: Spacer
      name: spacerUpdateTache
    - component: Text
      name: textCompleteTache
      layout:
        horizontalAlign: center
      props:
        value: Compléter une tâche
        variant: h3
    - component: PageRow
      name: pageRowCompleteTache
      props:
        justifyContent: start
      children:
        - component: Text
          name: textCompleteTache1
          layout:
            columnSize: 0.745254618930525
            horizontalAlign: end
          props:
            value: "Id de la tâche: "
        - component: TextField
          name: textFieldCompleteTache
          layout:
            columnSize: 0.7447156053237783
          props:
            fullWidth: true
        - component: Button
          name: buttonCompleteTache
          layout:
            columnSize: 1.5100297757456964
          props:
            fullWidth: true
            content: Compléter une tâche
            onClick:
              $$jsExpressionAction: updateTacheComplete.call()
    - component: Spacer
      name: spacerCompleteTache
    - component: Text
      name: textAddSousTache
      props:
        value: Ajouter une sous-tâche
        variant: h3
      layout:
        horizontalAlign: center
    - component: PageRow
      name: pageRowAddSousTache
      props:
        justifyContent: start
      children:
        - component: Text
          name: textAddSousTache1
          layout:
            columnSize: 1.0007185064860917
            horizontalAlign: end
          props:
            value: "Titre: "
        - component: TextField
          name: textFieldAddSousTache
          props:
            fullWidth: true
          layout:
            columnSize: 1.0000091827179496
        - component: Text
          name: textAddSousTache2
          layout:
            horizontalAlign: end
            columnSize: 0.9992723107959586
          props:
            value: "Complete: "
        - component: TextField
          name: textField
          props:
            fullWidth: true
    - component: PageRow
      name: pageRowAddSousTache1
      props:
        justifyContent: start
      children:
        - component: Text
          name: textAddSousTache3
          layout:
            columnSize: 0.7433679712940493
            horizontalAlign: end
          props:
            value: "Id de la tâche: "
        - component: TextField
          name: textFieldAddSousTache1
          layout:
            columnSize: 0.7460297138595897
          props:
            fullWidth: true
        - component: Spacer
          name: spacerAddSousTache
          layout:
            columnSize: 1.510602314846361
    - component: Button
      name: buttonAddSousTache
      props:
        fullWidth: true
        content: Ajouter une sous-tâche
        onClick:
          $$jsExpressionAction: addSousTache.call()
    - component: Spacer
      name: spacerRemoveSousTache
    - component: Text
      name: textRemoveSousTache
      layout:
        horizontalAlign: center
      props:
        variant: h3
        value: Supprimer une sous-tâche
    - component: PageRow
      name: pageRowRemoveSousTache
      props:
        justifyContent: start
      children:
        - component: Text
          name: textRemoveSousTache1
          layout:
            horizontalAlign: end
          props:
            value: "Id de la sous-tâche: "
        - component: TextField
          name: textFieldRemoveSousTache
          layout:
            columnSize: 1
          props:
            fullWidth: true
        - component: Button
          name: buttonRemoveSousTache
          props:
            fullWidth: true
            content: Supprimer une sous-tâche
            onClick:
              $$jsExpressionAction: removeSousTache.call()
    - component: Spacer
      name: spacerRemoveSousTache1
    - component: Text
      name: textUpdateSousTache
      props:
        value: Modifier une sous-tâche
        variant: h3
      layout:
        horizontalAlign: center
    - component: PageRow
      name: pageRowUpdateSousTache
      props:
        justifyContent: start
      children:
        - component: Text
          name: textUpdateSousTache1
          layout:
            horizontalAlign: end
          props:
            value: "Id de la sous-tâche: "
        - component: TextField
          name: textFieldUpdateSousTache
          props:
            fullWidth: true
        - component: Text
          name: text2
          layout:
            horizontalAlign: end
          props:
            value: "titre: "
        - component: TextField
          name: textField2
          props:
            fullWidth: true
    - component: PageRow
      name: pageRowUpdateSousTache1
      props:
        justifyContent: start
      children:
        - component: Text
          name: text3
          layout:
            columnSize: 0.7452500467670391
            horizontalAlign: end
          props:
            value: "Complete: "
        - component: TextField
          name: textField3
          layout:
            columnSize: 0.7447220444344886
          props:
            fullWidth: true
        - component: Button
          name: button
          layout:
            columnSize: 1.5100279087984723
          props:
            fullWidth: true
            content: Modifier une sous-tâche
            onClick:
              $$jsExpressionAction: updateSousTache.call()
    - component: Spacer
      name: spacerUpdateSousTache
    - component: Text
      name: text
      props:
        value: Compléter une sous-tâche
        variant: h3
      layout:
        horizontalAlign: center
    - component: PageRow
      name: pageRow
      props:
        justifyContent: start
      children:
        - component: Text
          name: text1
          layout:
            columnSize: 0.745254618930525
          props:
            value: "Id de la sous-tâche: "
        - component: TextField
          name: textField1
          layout:
            columnSize: 0.7447156053237783
          props:
            fullWidth: true
        - component: Button
          name: button2
          layout:
            columnSize: 1.5100297757456964
          props:
            fullWidth: true
            content: Compléter une sous-tâche
            onClick:
              $$jsExpressionAction: updateSousTacheComplete.call()
    - component: Spacer
      name: spacer
